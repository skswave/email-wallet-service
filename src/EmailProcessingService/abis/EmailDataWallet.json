[
  "constructor(address _registrationContract)",
  "event EmailWalletAuthorized(bytes32 indexed walletId, address indexed owner, bytes32 authorizationTx, uint256 timestamp)",
  "event EmailWalletCreated(bytes32 indexed walletId, address indexed owner, bytes32 indexed emailHash, string ipfsHash, uint256 timestamp)",
  "event EmailWalletStatusChanged(bytes32 indexed walletId, uint8 oldStatus, uint8 newStatus)",
  "event EmailWalletVerified(bytes32 indexed walletId, bytes32 contentHash, string ipfsHash, uint256 blockNumber)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "function EMAIL_WALLET_COST() view returns (uint256)",
  "function authorizeEmailWallet(bytes32 walletId, bytes32 authorizationTx, bytes signature)",
  "function changeWalletStatus(bytes32 walletId, uint8 newStatus)",
  "function createEmailWallet(string forwardedBy, string originalSender, string messageId, string subject, bytes32 bodyHash, bytes32 emailHash, bytes32 emailHeadersHash, uint256 attachmentCount, string ipfsHash, (bool spfPass, bool dkimValid, bool dmarcPass, string dkimSignature) authResults) returns (bytes32 walletId)",
  "function emailWallets(bytes32) view returns (bytes32 walletId, string walletType, address owner, uint256 createdAt, bytes32 authorizationTx, uint8 status, (string forwardedBy, uint256 forwardedAt, string originalSender, string messageId, bytes32 emailHeadersHash, (bool spfPass, bool dkimValid, bool dmarcPass, string dkimSignature) authResults) origin, (string subject, bytes32 bodyHash, bytes32 emailHash, uint256 attachmentCount, bytes32[] attachmentWalletIds, uint256 totalSize) content, (bytes32 contentHash, string ipfsHash, bytes32 merkleRoot, uint256 blockNumber, uint256 verifiedAt, string network) verification)",
  "function emergencyArchiveWallet(bytes32 walletId)",
  "function getAttachmentWallets(bytes32 walletId) view returns (bytes32[])",
  "function getEmailOrigin(bytes32 walletId) view returns (string forwardedBy, uint256 forwardedAt, string originalSender, string messageId, bool spfPass, bool dkimValid, bool dmarcPass)",
  "function getEmailWallet(bytes32 walletId) view returns (bytes32 id, string walletType, address owner, uint256 createdAt, uint8 status, string subject, bytes32 emailHash, string ipfsHash, uint256 attachmentCount)",
  "function getMultipleWallets(bytes32[] walletIds) view returns (bytes32[] ids, address[] owners, string[] subjects, uint8[] statuses)",
  "function getOwnerWallets(address owner) view returns (bytes32[])",
  "function getWalletVerification(bytes32 walletId) view returns (bytes32 contentHash, string ipfsHash, bytes32 merkleRoot, uint256 blockNumber, uint256 verifiedAt)",
  "function owner() view returns (address)",
  "function ownerWallets(address, uint256) view returns (bytes32)",
  "function registrationContract() view returns (address)",
  "function renounceOwnership()",
  "function setRegistrationContract(address newContract)",
  "function totalEmailWallets() view returns (uint256)",
  "function transferOwnership(address newOwner)",
  "function updateAttachmentWallets(bytes32 walletId, bytes32[] attachmentWalletIds, uint256 totalSize)",
  "function updateIPFSHash(bytes32 walletId, string newIpfsHash)",
  "function verifyEmailWallet(bytes32 walletId, bytes32 providedHash) view returns (bool)",
  "function verifyWalletIntegrity(bytes32 walletId) view returns (bool)",
  "function walletExists(bytes32) view returns (bool)"
]